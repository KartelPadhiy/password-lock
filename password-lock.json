Hooks.once('init', function () {
  // Добавляем настройки для модуля
  game.settings.register('password-lock', 'userSheetPassword', {
    name: 'User sheet password',
    hint: 'Set a password to lock user sheets',
    scope: 'world',
    config: true,
    type: String,
    default: '',
  });

  game.settings.register('password-lock', 'mapPassword', {
    name: 'Map password',
    hint: 'Set a password to lock maps',
    scope: 'world',
    config: true,
    type: String,
    default: '',
  });
});

// Обработчик события при открытии листа персонажа игрока
Hooks.on('renderActorSheet', function (sheet, html, data) {
  if (game.user.isGM) return; // Для GM пароли не нужны

  const password = game.settings.get('password-lock', 'userSheetPassword');
  if (!password) return; // Если пароль не задан, ничего не делаем

  // Добавляем поле для ввода пароля на листе персонажа игрока
  html.find('.app[data-appid="actor"]').prepend(`
    <div class="password-lock">
      <label>Password:</label>
      <input type="password" class="password-lock-input" placeholder="Enter password">
    </div>
  `);

  // Обработчик события при сохранении листа персонажа игрока
  html.find('.password-lock-input').on('change', function () {
    const input = $(this);
    const enteredPassword = input.val();

    // Если введенный пароль не соответствует установленному, открываем диалоговое окно с ошибкой
    if (enteredPassword !== password) {
      ui.notifications.error('Incorrect password!');
      sheet.close();
      return;
    }
  });
});

// Обработчик события при открытии карты
Hooks.on('renderSceneConfig', function (sheet, html, data) {
  if (game.user.isGM) return; // Для GM пароли не нужны

  const password = game.settings.get('password-lock', 'mapPassword');
  if (!password) return; // Если пароль не задан, ничего не делаем

  // Добавляем поле для ввода пароля на страницу настроек карты
  html.find('.tab[data-tab="general"]').prepend(`
    <div class="password-lock">
      <label>Password:</label>
      <input type="password" class="password-lock-input" placeholder="Enter password">
    </div>
  `);

  // Обработчик события при сохранении настроек карты
  html.find('.password-lock-input').on('change', function () {
    const input = $(this);
    const enteredPassword = input.val();

    // Если введенный пароль не соответствует установленному, открываем диалоговое окно с ошибкой
    if (enteredPassword !== password) {
      ui.notifications.error('Incorrect password!');
      sheet.close();
      return;
    }
  });
});
